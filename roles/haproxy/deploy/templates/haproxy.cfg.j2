#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
        log 127.0.0.1 local2
        daemon
        maxconn 1000

        # turn on stats unix socket
        stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
        mode    http
        log     global
        option  httplog
        option  dontlognull
        retries 3
        option redispatch
        option httpclose
        option forwardfor

        timeout http-request    10s
        timeout queue           1m
        timeout connect         10s
        timeout client          1m
        timeout server          1m
        timeout http-keep-alive 10s
        timeout check           10s

        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
        stats enable
        stats uri /stats
        stats realm Haproxy\ Statistics
        stats auth {{ haproxy_user }}:{{ haproxy_password }}
        stats refresh 30s

#---------------------------------------------------------------------
# FrontEnd Configuration
#---------------------------------------------------------------------
frontend WEBLoadBalancer-HTTP
       bind *:{{ haproxy_port }}
       option http-server-close
       default_backend nginx

backend nginx
        balance roundrobin
        option httpclose
        option httpchk HEAD /status.html HTTP/1.0

{% if item == "master" %}
        server master_nginx 127.0.0.1:8000 check
        server slave_nginx slave:80 check
{% else %}
        server slave_nginx 127.0.0.1:8000 check
        server master_nginx master:80 check
{% endif %}
